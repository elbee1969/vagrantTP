# -*- mode: ruby -*-
# vi: set ft=ruby :

############### INLINE SCRIPTS
@key_install = <<SCRIPT
  echo "Generate RSA key"
  ssh-keygen -f id_rsa
  cat id_rsa.pub  >> authorized_keys
SCRIPT

@snap_install = <<SCRIPT
  echo "Installing Snap"
  apt install snapd
  service snapd start
SCRIPT

@jenkins_install = <<SCRIPT  
  echo "Installing Jenkins"
  sudo apt install default-jre
  wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
  sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
  sudo apt update
  sudo apt install jenkins
  sudo systemctl start jenkins
SCRIPT

@docker_install = <<SCRIPT
  echo "Installing Docker"
  snap install docker
  snap start docker
SCRIPT
###############

Vagrant.configure("2") do |config|
  config.vm.boot_timeout = 1200

  # serveur de production 
  config.vm.define "venus" do |srvprod|
      srvprod.vm.box = "bento/ubuntu-22.04"
      srvprod.vm.network :private_network, ip: "192.168.5.1"
      srvprod.vm.hostname = "venus"

      srvprod.vm.provider :virtualbox do |v|
         v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
         v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
         v.customize ["modifyvm", :id, "--memory", 2048]
         v.customize ["modifyvm", :id, "--name", "venus"]
         v.customize ["modifyvm", :id, "--cpus", "2"]
      end
	  
     config.vm.synced_folder "./scripts/", "/home/vagrant/scripts", owner: "vagrant", group: "vagrant",:mount_options => ["dmode=777", "fmode=766"]

     # provisionning
     #srvprod.vm.provision "shell", inline: @snap_install
     srvprod.vm.provision "shell", inline: @key_install
     srvprod.vm.provision "shell", inline: @docker_install
     #srvprod.vm.provision "shell", path: "./scripts/install-docker.sh"


     # provisionning ssh
     srvprod.vm.provision "shell", inline: <<-SHELL
         sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
         service ssh restart
     SHELL
  end
   
  # serveur jenkins
  config.vm.define "jupiter" do |config|
     config.vm.box = "bento/ubuntu-22.04"
     config.vm.network :private_network, ip: "192.168.5.1"
     config.vm.hostname = "jupiter" 
  
     config.vm.provider :virtualbox do |v|
         v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
         v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
         v.customize ["modifyvm", :id, "--memory", 2048]
         v.customize ["modifyvm", :id, "--name", "jupiter"]
         v.customize ["modifyvm", :id, "--cpus", "2"]
     end

     # copie des shells
     config.vm.synced_folder "./scripts/", "/home/vagrant/scripts", owner: "vagrant", group: "vagrant",:mount_options => ["dmode=777", "fmode=766"]

     # provisionning
     # config.vm.provision "shell", inline: @snap_install
     # config.vm.provision "shell", inline: @docker_install
     config.vm.provision "shell", inline: @key_install
     config.vm.provision "shell", path: "./scripts/install-jenkins.sh"
     config.vm.provision "shell", inline: @docker_install
     #config.vm.provision "shell", path: "./scripts/install-docker.sh"

     config.vm.provision "shell", inline: <<-SHELL
         sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
         service ssh restart
     SHELL
  end
  
end
